#https://kubernetes.io/blog/2019/07/23/get-started-with-kubernetes-using-python/
apiVersion: v1
kind: Service
metadata:
  name: steelworksservice
spec:
  selector:
    app: sw
  ports:
  - protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer


---
apiVersion: v1
kind: Service
metadata:
  name: dbservice
  labels:
    run: mysql
spec:
  ports:
  - port: 3306
    protocol: TCP
  selector:
    app: mysql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{password}}
        - name: SQLALCHEMY_DATABASE_URI
          value: {{db_uri}}
        ports:
        - containerPort: 3306
          name: mysql
      #   volumeMounts:
      #   - name: mysql-data
      #     mountPath: /var/lib/mysql
      # volumes:
      # - name: mysql-data
      #   persistentVolumeClaim:
      #     claimName: mysql-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: steelworks-deployment
  labels: 
    app: sw
spec:
  selector:
    matchLabels:
      app: sw
  replicas: 3
  template:
    metadata:
      labels:
        app: sw
    spec:
      containers:
      - name: steelworks
        image: thomashennessy/steel-works
        env:
          - name: SECRET_KEY
            value: {{secret-key}}
        ports:
        - containerPort: 5000